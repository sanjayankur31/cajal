/* The map */
var map;
var vectorLayer

/* Test data */
var testlab = {}
testlab.name = 'UHBiocomputation'
/* remember that these need to be integers, not strings */
testlab.long = -0.228
testlab.lat = 51.762

function init() {
    /* load jquery for xml parsing */
    (function() {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src =  'jquery-3.1.0.min.js';

        document.getElementsByTagName('head')[0].appendChild(script)
    })();

    addmarkers()

    map = new ol.Map({
        controls: ol.control.defaults({
            attributionOptions: /** @type {olx.control.AttributionOptions} */ ({
                collapsible: true
            })
        }),
        layers: [
            new ol.layer.Tile({
                source: new ol.source.OSM()
            }),
            vectorLayer
        ],
        target: document.getElementById('map'),
        view: new ol.View({
            center: [0, 0],
            zoom: 2
        })
    });

    var element = document.getElementById('popup');

    var popup = new ol.Overlay({
        element: element,
        positioning: 'bottom-center',
        stopEvent: false,
        offset: [0, -50]
    });
    map.addOverlay(popup);

    // display popup on click
    map.on('click', function(evt) {
        var feature = map.forEachFeatureAtPixel(evt.pixel,
            function(feature) {
                return feature;
            });
        if (feature) {
            var coordinates = feature.getGeometry().getCoordinates();
            popup.setPosition(coordinates);
            $(element).popover({
                'placement': 'top',
                'html': true,
                'content': 'test' // feature.get('name')
            });
            $(element).popover('show');
        } else {
            $(element).popover('destroy');
        }
    });

    // change mouse cursor when over marker
    map.on('pointermove', function(e) {
        if (e.dragging) {
            $(element).popover('destroy');
            return;
        }
        var pixel = map.getEventPixel(e.originalEvent);
        var hit = map.hasFeatureAtPixel(pixel);
        map.getTarget().style.cursor = hit ? 'pointer' : '';
    });
}

function addmarkers(xml) {
    /* This will read from the files and add markers for each based on location
     * It'll also create an associative array that will populate info on-click 
     */
    /* Array of vector features */
    var vectorSource = new ol.source.Vector({
    });

    $.ajax({
        type: "GET",
        url: "data.xml",
        dataType: "xml",
        success: function (xml) {
            var xmlDoc = $.parseXML(xml),
                $xml = $(xmlDoc);
            $xml.find('group').each(function () {
                /* An icon */
                var iconFeature = new ol.Feature({
                    geometry: new ol.geom.Point(ol.proj.transform([testlab.long, testlab.lat],
                        'EPSG:4326','EPSG:3857')),
                    name: testlab.name,
                    population: 0,
                    rainfall: 0,
                });
                vectorSource.addFeature(iconFeature);
            });
        }
    });




    /* The icon style for all icons */
    var iconStyle = new ol.style.Style({
        image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
            anchor: [0.5, 46],
            anchorXUnits: 'fraction',
            anchorYUnits: 'pixels',
            src: 'http://openlayers.org/en/v3.17.1/examples/data/icon.png'
        }))
    });

    /* Populate the layer with all markers */
    vectorLayer = new ol.layer.Vector({
        source: vectorSource,
        style: iconStyle
    });
}

